; For all tests that run in Github Actions, see
; .github/workflows/cpu-ci.yml for the workflow definition.

[tox]
envlist = python3.8,test-gpu,test-cpu
isolated-build = True

[testenv]
commands =
    pip install --upgrade pip
    pip install .

[testenv:test-gpu]
passenv =
    OPAL_PREFIX
setenv =
    TF_GPU_ALLOCATOR=cuda_malloc_async
sitepackages=true
; Runs in: Internal Jenkins
; Runs GPU-based tests.
; The jenkins jobs run on an image based on merlin-hugectr. This will include all cudf configuration
; and other gpu-specific libraries that we can enxpect will always exist. Thus, we don't need
; to install requirements.txt yet. As we get better at python environment isolation, we will
; need to add some back.
deps =
    pytest
    pytest-cov
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/systems.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/models.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/NVTabular.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/dataloader.git

    python -m pytest -m "not multigpu" --cov-report term --cov merlin -rxs tests/unit
    python -m pytest -m "singlegpu" --cov-report term --cov merlin -rxs tests/unit

[testenv:test-gpu-multigpu]
passenv =
    OPAL_PREFIX
setenv =
    TF_GPU_ALLOCATOR=cuda_malloc_async
sitepackages=true
; Runs in: multi-gpu github actions runners
; Runs GPU-based tests marked with `pytest.mark.multigpu`
deps =
    pytest
    pytest-cov
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/systems.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/models.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/NVTabular.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/dataloader.git

    python -m pytest -m "multigpu" --cov-report term --cov merlin -rxs tests/unit


[testenv:docs]
; Runs in: Github Actions
; Generates documentation with sphinx. There are other steps in the Github Actions workflow
; to publish the documentation on release.
changedir = {toxinidir}
deps = 
    -rdocs/requirements-doc.txt
    tensorflow 
    torch 
    torchmetrics
    git+https://github.com/NVIDIA-Merlin/core.git
    git+https://github.com/NVIDIA-Merlin/dataloader.git
    git+https://github.com/NVIDIA-Merlin/models.git
    git+https://github.com/NVIDIA-Merlin/NVTabular.git
    git+https://github.com/NVIDIA-Merlin/systems.git
    git+https://github.com/NVIDIA-Merlin/Transformers4Rec.git
    
allowlist_externals = 
    git
    cp
commands =
    git clone --depth 1 https://github.com/NVIDIA-Merlin/core.git ./docs/core
    cp -r ./docs/core/docs/source/api ./docs/source/api_core/
    git clone --depth 1 https://github.com/NVIDIA-Merlin/dataloader.git ./docs/dataloader
    cp ./docs/dataloader/docs/source/api.rst ./docs/source/api_dataloader.rst
    git clone --depth 1 https://github.com/NVIDIA-Merlin/models.git ./docs/models
    cp ./docs/models/docs/source/api.rst ./docs/source/api_models.rst
    git clone --depth 1 https://github.com/NVIDIA-Merlin/NVTabular.git ./docs/NVTabular
    cp ./docs/NVTabular/docs/source/api.rst ./docs/source/api_nvtabular.rst
    git clone --depth 1 https://github.com/NVIDIA-Merlin/systems.git ./docs/systems
    cp ./docs/systems/docs/source/api.rst ./docs/source/api_systems.rst
    git clone --depth 1 https://github.com/NVIDIA-Merlin/Transformers4Rec.git ./docs/Transformers4Rec
    cp -r ./docs/Transformers4Rec/docs/source/api ./docs/source/api_transformers4rec/
    python -m sphinx.cmd.build -E -P -b html docs/source docs/build/html


[testenv:docs-multi]
; Run the multi-version build that is shown on GitHub Pages.
changedir = {toxinidir}
deps = 
    -rdocs/requirements-doc.txt
    git+https://github.com/NVIDIA-Merlin/models.git
    git+https://github.com/NVIDIA-Merlin/NVTabular.git
    git+https://github.com/NVIDIA-Merlin/core.git
    git+https://github.com/NVIDIA-Merlin/systems.git
    git+https://github.com/NVIDIA-Merlin/dataloader.git
allowlist_externals = 
    git clone https://github.com/NVIDIA-Merlin/core.git
commands =
    sphinx-multiversion --dump-metadata docs/source docs/build/html | jq "keys"
    sphinx-multiversion docs/source docs/build/html