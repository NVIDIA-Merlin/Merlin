{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a5b71acd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Copyright 2021 NVIDIA Corporation. All Rights Reserved.\n",
    "#\n",
    "# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
    "# you may not use this file except in compliance with the License.\n",
    "# You may obtain a copy of the License at\n",
    "#\n",
    "#     http://www.apache.org/licenses/LICENSE-2.0\n",
    "#\n",
    "# Unless required by applicable law or agreed to in writing, software\n",
    "# distributed under the License is distributed on an \"AS IS\" BASIS,\n",
    "# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
    "# See the License for the specific language governing permissions and\n",
    "# limitations under the License.\n",
    "# =============================================================================="
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1f95be1",
   "metadata": {},
   "source": [
    "# Scaling Criteo: Training with Merlin Models\n",
    "\n",
    "This notebook is created using the latest stable [merlin-tensorflow-training](https://catalog.ngc.nvidia.com/orgs/nvidia/teams/merlin/containers/merlin-tensorflow-training/tags) container.\n",
    "\n",
    "\n",
    "## Overview\n",
    "\n",
    "The [Criteo 1TB Click Logs dataset](https://ailab.criteo.com/download-criteo-1tb-click-logs-dataset/) is a popular dataset in the recommender system community as it is one of the largest, public available dataset. It contains ~1.3 TB of uncompressed click logs containing over four billion samples spanning 24 days.\n",
    "\n",
    "We will train Facebook's [deep learning recommendation model (DLRM)](https://arxiv.org/abs/1906.00091) architecture with Merlin Models. We will assume you are familiar with Merlin Models' API and features. Otherwise, we recommend to start with the [Merlin Models examples](https://github.com/NVIDIA-Merlin/models/tree/main/examples).\n",
    "\n",
    "## Learning objectives\n",
    "\n",
    "- Train a DLRM architecture with Merlin Models on a large dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "68941f39",
   "metadata": {},
   "source": [
    "## Training a DLRM model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db535904",
   "metadata": {},
   "source": [
    "Let's start with importing the libraries that we'll use in this notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3b347509",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-06-22 13:28:57.068091: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
      "2022-06-22 13:28:59.393436: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1532] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 16255 MB memory:  -> device: 0, name: Tesla V100-SXM2-32GB-LS, pci bus id: 0000:06:00.0, compute capability: 7.0\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "\n",
    "import glob\n",
    "import time\n",
    "import merlin.models.tf as mm\n",
    "from merlin.io.dataset import Dataset\n",
    "\n",
    "from merlin.schema import Tags\n",
    "import tensorflow as tf"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b4923fa",
   "metadata": {},
   "source": [
    "Define the path to directories which contains the processed data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "71f448ee",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(['/tmp/criteo/train/part_0.parquet'], ['/tmp/criteo/valid/part_0.parquet'])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_path = os.environ.get(\"INPUT_DATA_DIR\", \"/tmp/criteo/\")\n",
    "\n",
    "# path to processed data\n",
    "PATH_TO_TRAIN_DATA = sorted(glob.glob(os.path.join(input_path, \"train\", \"*.parquet\")))\n",
    "PATH_TO_VALID_DATA = sorted(glob.glob(os.path.join(input_path, \"valid\", \"*.parquet\")))\n",
    "\n",
    "PATH_TO_TRAIN_DATA, PATH_TO_VALID_DATA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74aa21e3",
   "metadata": {},
   "source": [
    "We define some hyperparameters for the model architecture."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "54c35685",
   "metadata": {},
   "outputs": [],
   "source": [
    "BATCH_SIZE = int(os.environ.get(\"BATCH_SIZE\", 64 * 1024))\n",
    "EMBEDDING_SIZE = 32\n",
    "EPOCHS = 1\n",
    "LR = 0.01\n",
    "OPTIMIZER = tf.keras.optimizers.SGD(learning_rate=LR)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97375902",
   "metadata": {},
   "source": [
    "We will use Merlin Dataset object to initalize the dataloaders. It provides a dataset schema to initialize the model architectures. The [Merlin Models examples](https://github.com/NVIDIA-Merlin/models/tree/main/examples) will explain more details."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1aab6cfb",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/lib/python3.8/site-packages/cudf/core/dataframe.py:1292: UserWarning: The deep parameter is ignored and is only included for pandas compatibility.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "train = Dataset(PATH_TO_TRAIN_DATA, part_mem_fraction=0.08)\n",
    "valid = Dataset(PATH_TO_VALID_DATA, part_mem_fraction=0.08)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "edf40eb9",
   "metadata": {},
   "source": [
    "We initalize the DLRM architecture with Merlin Models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ce4117ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = mm.DLRMModel(\n",
    "    train.schema,\n",
    "    embedding_dim=EMBEDDING_SIZE,\n",
    "    bottom_block=mm.MLPBlock([128, EMBEDDING_SIZE]),\n",
    "    top_block=mm.MLPBlock([128, 64, 32]),\n",
    "    prediction_tasks=mm.BinaryClassificationTask(\n",
    "        train.schema.select_by_tag(Tags.TARGET).column_names[0]\n",
    "    )\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "598a56da",
   "metadata": {},
   "source": [
    "We compile and train our model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "52ea88cb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   6/2989 [..............................] - ETA: 22:21 - loss: 0.7108 - precision: 0.0389 - recall: 0.5807 - binary_accuracy: 0.4882 - auc: 0.5487 - regularization_loss: 0.0000e+00WARNING:tensorflow:Callback method `on_train_batch_end` is slow compared to the batch time (batch time: 0.1357s vs `on_train_batch_end` time: 0.2580s). Check your callbacks.\n",
      "2989/2989 [==============================] - 375s 114ms/step - loss: 0.1580 - precision: 0.0383 - recall: 0.0016 - binary_accuracy: 0.9667 - auc: 0.5820 - regularization_loss: 0.0000e+00 - val_loss: 0.1438 - val_precision: 0.0905 - val_recall: 7.4995e-05 - val_binary_accuracy: 0.9661 - val_auc: 0.6481 - val_regularization_loss: 0.0000e+00\n",
      "CPU times: user 7min 16s, sys: 6min 46s, total: 14min 3s\n",
      "Wall time: 6min 35s\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f82e68891c0>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "model.compile(optimizer=OPTIMIZER, run_eagerly=False)\n",
    "model.fit(train, validation_data=valid, batch_size=BATCH_SIZE, epochs=EPOCHS)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04f3cf26",
   "metadata": {},
   "source": [
    "## Evaluate the model\n",
    "\n",
    "Finally, we can evaluate our model on the validation dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "db25ed20",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2633/2633 [==============================] - 108s 38ms/step - loss: 0.1438 - precision: 0.0905 - recall: 7.4995e-05 - binary_accuracy: 0.9661 - auc: 0.6481 - regularization_loss: 0.0000e+00\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{'loss': 0.14381085336208344,\n",
       " 'precision': 0.09051457047462463,\n",
       " 'recall': 7.49945902498439e-05,\n",
       " 'binary_accuracy': 0.9661294221878052,\n",
       " 'auc': 0.6481243968009949,\n",
       " 'regularization_loss': 0.0}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eval_metrics = model.evaluate(valid, batch_size=BATCH_SIZE, return_dict=True)\n",
    "eval_metrics"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79c3d245",
   "metadata": {},
   "source": [
    "## Save the model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b58b134",
   "metadata": {},
   "source": [
    "We save the model to disk."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b0f9e68c",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:Function `_wrapped_model` contains input name(s) C1, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C2, C20, C21, C22, C23, C24, C25, C26, C3, C4, C5, C6, C7, C8, C9, I1, I10, I11, I12, I13, I2, I3, I4, I5, I6, I7, I8, I9 with unsupported characters which will be renamed to c1, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c2, c20, c21, c22, c23, c24, c25, c26, c3, c4, c5, c6, c7, c8, c9, i1, i10, i11, i12, i13, i2, i3, i4, i5, i6, i7, i8, i9 in the SavedModel.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e60a90d0>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e60a90d0>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286c67d00>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286c67d00>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286497d60>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286497d60>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828623c430>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828623c430>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fbfb20>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fbfb20>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd8100>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd8100>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e887280>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e887280>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e887040>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e887040>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286db5610>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286db5610>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e672ab20>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e672ab20>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828670cb80>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828670cb80>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82864a0940>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82864a0940>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286203430>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286203430>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd4fd0>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd4fd0>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821ebaee20>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821ebaee20>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e8ad190>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e8ad190>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286db5610>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286db5610>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e672ab20>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e672ab20>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828670cb80>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828670cb80>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82864a0940>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82864a0940>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286203430>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286203430>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd4fd0>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd4fd0>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821ebaee20>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821ebaee20>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e8ad190>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e8ad190>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e60a90d0>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e60a90d0>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286c67d00>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286c67d00>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286497d60>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286497d60>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828623c430>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828623c430>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fbfb20>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fbfb20>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd8100>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd8100>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e887280>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e887280>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e887040>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e887040>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286db5610>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286db5610>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e672ab20>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82e672ab20>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828670cb80>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f828670cb80>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82864a0940>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f82864a0940>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286203430>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8286203430>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd4fd0>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f8285fd4fd0>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821ebaee20>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, True), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821ebaee20>}).\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e8ad190>}).\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Unsupported signature for serialization: (({'C1': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C1'), 'C2': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C2'), 'C3': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C3'), 'C4': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C4'), 'C5': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C5'), 'C6': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C6'), 'C7': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C7'), 'C8': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C8'), 'C9': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C9'), 'C10': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C10'), 'C11': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C11'), 'C12': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C12'), 'C13': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C13'), 'C14': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C14'), 'C15': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C15'), 'C16': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C16'), 'C17': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C17'), 'C18': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C18'), 'C19': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C19'), 'C20': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C20'), 'C21': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C21'), 'C22': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C22'), 'C23': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C23'), 'C24': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C24'), 'C25': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C25'), 'C26': TensorSpec(shape=(None, 1), dtype=tf.int32, name='inputs/C26'), 'I1': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I1'), 'I2': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I2'), 'I3': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I3'), 'I4': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I4'), 'I5': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I5'), 'I6': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I6'), 'I7': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I7'), 'I8': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I8'), 'I9': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I9'), 'I10': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I10'), 'I11': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I11'), 'I12': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I12'), 'I13': TensorSpec(shape=(None, 1), dtype=tf.float32, name='inputs/I13')}, False), {'feature_context': <tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f821e8ad190>}).\n",
      "WARNING:absl:Found untraced functions such as sequential_block_10_layer_call_fn, sequential_block_10_layer_call_and_return_conditional_losses, model_context_layer_call_fn, model_context_layer_call_and_return_conditional_losses, sequential_block_9_layer_call_fn while saving (showing 5 of 70). These functions will not be directly callable after loading.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Assets written to: /tmp/criteo/dlrm/assets\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Assets written to: /tmp/criteo/dlrm/assets\n"
     ]
    }
   ],
   "source": [
    "model.save(os.path.join(input_path, \"dlrm\"))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
